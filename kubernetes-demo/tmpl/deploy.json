{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsNamePrefix": {
      "type": "string",
      "defaultValue": "consorsDemo",
      "metadata": {
        "description": "Sets the Domain name prefix for the cluster.  The concatenation of the domain name and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "5305c27d-8d75-4340-9c62-4a7e98d498b4",
      "metadata": {
        "description": "Subcription to deploy my stack to to"
      }
    },
    "clusterResourceGroup": {
      "type": "string",
      "defaultValue": "[concat(parameters('dnsNamePrefix'), 'Cluster')]",
      "metadata": {
        "description": "Resource Group AKS Cluster is deployed in"
      }
    },
    "networkResourceGroup": {
      "type": "string",
      "defaultValue": "[concat(parameters('dnsNamePrefix'), 'Network')]",
      "metadata": {
        "description": "Resource Group VNET is deployed in"
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100 (note, for Kubernetes clusters you will also get 1 or 2 public agents in addition to these seleted masters)"
      },
      "minValue": 1,
      "maxValue": 100
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "[concat(parameters('dnsNamePrefix'), 'Vnet')]",
      "metadata": {
        "description": "VNET Name"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "[concat(resourceGroup().name, 'Networking')]",
      "metadata": {
        "description": "Resource Group VNET is deployed in"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "[concat(parameters('dnsNamePrefix'), 'ClusterSubnet')]",
      "metadata": {
        "description": "Name of the subnet inside the VNET"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines."
      }
    },
    "sshRSAPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "Configure all linux machines with the SSH RSA public key string.  Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "clientAppID": {
      "metadata": {
        "description": "The Service Principal Client clientAppID."
      },
      "type": "securestring"
    },
    "serverAppID": {
      "metadata": {
        "description": "The Service Principal serverAppID."
      },
      "type": "securestring"
    },
    "serverAppSecret": {
      "metadata": {
        "description": "The Service Principal serverAppSecret."
      },
      "type": "securestring"
    },
    "tenantID": {
      "metadata": {
        "description": "The Account TennantID."
      },
      "type": "securestring",
      "defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
    }
  },
  "variables": {
    "templateBaseUrl": "https://raw.githubusercontent.com/aheumaier/azure-demos/master/kubernetes-demo/tmpl/",
    "networkTemplateUrl": "[concat(variables('templateBaseUrl'), 'network.json')]",
    "networkParametersUrl": "[concat(variables('templateBaseUrl'), 'deploy.parameters.json')]",
    "clusterTemplateUrl": "[concat(variables('templateBaseUrl'), 'aksCluster.json')]",
    "clusterParametersUrl": "[concat(variables('templateBaseUrl'), 'deploy.parameters.jsonn')]",
    "agentsEndpointDNSNamePrefix": "[concat(parameters('dnsNamePrefix'),'agents')]",
    "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetID": "[resourceId(concat(resourceGroup().name, 'Networking'),'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnet1Name'))]",  
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('subnet1Name'))]"

 
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "nestedNetworkTemplate",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('networkResourceGroup')]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('networkTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "nestedClusterTemplate",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('clusterResourceGroup')]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "properties": {
        "mode": "incremental",
        "templateLink": {
          "uri": "[variables('clusterTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parametersLink": {
          "uri":"[variables('clusterParametersUrl')]",
          "contentVersion":"1.0.0.0"
       }
      }
    }
  ],
  "outputs": {
    "messageFromNestedNetworkTemplate": {
      "type": "string",
      "value": "[reference('nestedNetworkTemplate').outputs.subnet1ID.value]"
  }
    
  }
}